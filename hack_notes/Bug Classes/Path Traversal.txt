Payloads 
/ : absolute routes
Ex: /etc/passwd

// : absolute routes for non recursive filtering systems
Ex: /etc/passwd

../../../etc/passwd : Normal traversal characters
....//....//...//....//

URL Encoding
../ as %2e%2e%2f 

URL Double Encoding 
%25%32%65%25%32%65%25%32%66

An application may require the user-supplied filename to end with an expected file extension, 
such as .png. In this case, it might be possible to use a null byte to effectively terminate 
the file path before the required extension. For example: filename=../../../etc/passwd%00.png.

../../../etc/passwd%00.jpg

How to prevent a path traversal attack

The most effective way to prevent path traversal vulnerabilities is to avoid passing user-supplied input 
to filesystem APIs altogether. 
Many application functions that do this can be rewritten to deliver the same behavior in a safer way.

If you can't avoid passing user-supplied input to filesystem APIs, 
we recommend using two layers of defense to prevent attacks:

Validate the user input before processing it. 
Ideally, compare the user input with a whitelist of permitted values. 
If that isn't possible, verify that the input contains only permitted content, 
such as alphanumeric characters only.

After validating the supplied input, append the input to the base directory and 
use a platform filesystem API to canonicalize the path. 
Verify that the canonicalized path starts with the expected base directory.
